// Automatically generated by clay-bindgen
// language: c

private alias OpaquePointer = RawPointer;
private alias UnknownType = Int;
private alias AUnionType = Int;


record Struct___va_list_tag (
    gp_offset : UInt,
    fp_offset : UInt,
    overflow_arg_area : RawPointer,
    reg_save_area : RawPointer,
);

alias __va_list_tag = Struct___va_list_tag;

alias __builtin_va_list = Array[__va_list_tag,1];

alias ptrdiff_t = CLong;

alias size_t = CULong;

alias wchar_t = Int;

alias __u_char = CUChar;

alias __u_short = UShort;

alias __u_int = UInt;

alias __u_long = CULong;

alias __int8_t = CChar;

alias __uint8_t = CUChar;

alias __int16_t = Short;

alias __uint16_t = UShort;

alias __int32_t = Int;

alias __uint32_t = UInt;

alias __int64_t = CLong;

alias __uint64_t = CULong;

alias __quad_t = CLong;

alias __u_quad_t = CULong;

alias __dev_t = CULong;

alias __uid_t = UInt;

alias __gid_t = UInt;

alias __ino_t = CULong;

alias __ino64_t = CULong;

alias __mode_t = UInt;

alias __nlink_t = CULong;

alias __off_t = CLong;

alias __off64_t = CLong;

alias __pid_t = Int;

record UnnamedStruct (
    __val : Array[Int,2],
);

alias __fsid_t = UnnamedStruct;

alias __clock_t = CLong;

alias __rlim_t = CULong;

alias __rlim64_t = CULong;

alias __id_t = UInt;

alias __time_t = CLong;

alias __useconds_t = UInt;

alias __suseconds_t = CLong;

alias __daddr_t = Int;

alias __swblk_t = CLong;

alias __key_t = Int;

alias __clockid_t = Int;

alias __timer_t = RawPointer;

alias __blksize_t = CLong;

alias __blkcnt_t = CLong;

alias __blkcnt64_t = CLong;

alias __fsblkcnt_t = CULong;

alias __fsblkcnt64_t = CULong;

alias __fsfilcnt_t = CULong;

alias __fsfilcnt64_t = CULong;

alias __ssize_t = CLong;

alias __loff_t = CLong;

alias __qaddr_t = Pointer[CLong];

alias __caddr_t = Pointer[CChar];

alias __intptr_t = CLong;

alias __socklen_t = UInt;

alias FILE = Struct__IO_FILE;

alias __FILE = Struct__IO_FILE;

record UnnamedStruct2 (
    __count : Int,
    __value : AUnionType,
);

alias __mbstate_t = UnnamedStruct2;

record UnnamedStruct3 (
    __pos : CLong,
    __state : __mbstate_t,
);

alias _G_fpos_t = UnnamedStruct3;

record UnnamedStruct4 (
    __pos : CLong,
    __state : __mbstate_t,
);

alias _G_fpos64_t = UnnamedStruct4;

alias _G_int16_t = Short;

alias _G_int32_t = Int;

alias _G_uint16_t = UShort;

alias _G_uint32_t = UInt;

alias va_list = __builtin_va_list;

alias __gnuc_va_list = __builtin_va_list;

alias _IO_lock_t = Void;

record Struct__IO_marker (
    _next : Pointer[Struct__IO_marker],
    _sbuf : Pointer[Struct__IO_FILE],
    _pos : Int,
);

alias __codecvt_ok = 0;
alias __codecvt_partial = 1;
alias __codecvt_error = 2;
alias __codecvt_noconv = 3;

record Struct__IO_FILE (
    _flags : Int,
    _IO_read_ptr : Pointer[CChar],
    _IO_read_end : Pointer[CChar],
    _IO_read_base : Pointer[CChar],
    _IO_write_base : Pointer[CChar],
    _IO_write_ptr : Pointer[CChar],
    _IO_write_end : Pointer[CChar],
    _IO_buf_base : Pointer[CChar],
    _IO_buf_end : Pointer[CChar],
    _IO_save_base : Pointer[CChar],
    _IO_backup_base : Pointer[CChar],
    _IO_save_end : Pointer[CChar],
    _markers : Pointer[Struct__IO_marker],
    _chain : Pointer[Struct__IO_FILE],
    _fileno : Int,
    _flags2 : Int,
    _old_offset : CLong,
    _cur_column : UShort,
    _vtable_offset : CChar,
    _shortbuf : Array[CChar,1],
    _lock : RawPointer,
    _offset : CLong,
    __pad1 : RawPointer,
    __pad2 : RawPointer,
    __pad3 : RawPointer,
    __pad4 : RawPointer,
    __pad5 : CULong,
    _mode : Int,
    _unused2 : Array[CChar,20],
);

alias _IO_FILE = Struct__IO_FILE;

external _IO_2_1_stdin_ : Opaque;

external _IO_2_1_stdout_ : Opaque;

external _IO_2_1_stderr_ : Opaque;

external __underflow(
    argument0 : Pointer[_IO_FILE]) Int;

external __uflow(
    argument0 : Pointer[_IO_FILE]) Int;

external __overflow(
    argument0 : Pointer[_IO_FILE],
    argument1 : Int) Int;

external _IO_getc(
    __fp : Pointer[_IO_FILE]) Int;

external _IO_putc(
    __c : Int,
    __fp : Pointer[_IO_FILE]) Int;

external _IO_feof(
    __fp : Pointer[_IO_FILE]) Int;

external _IO_ferror(
    __fp : Pointer[_IO_FILE]) Int;

external _IO_peekc_locked(
    __fp : Pointer[_IO_FILE]) Int;

external _IO_flockfile(
    argument0 : Pointer[_IO_FILE]);

external _IO_funlockfile(
    argument0 : Pointer[_IO_FILE]);

external _IO_ftrylockfile(
    argument0 : Pointer[_IO_FILE]) Int;

external _IO_vfscanf(
    argument0 : Pointer[_IO_FILE],
    argument1 : Pointer[CChar],
    argument2 : Pointer[__va_list_tag],
    argument3 : Pointer[Int]) Int;

external _IO_vfprintf(
    argument0 : Pointer[_IO_FILE],
    argument1 : Pointer[CChar],
    argument2 : Pointer[__va_list_tag]) Int;

external _IO_padn(
    argument0 : Pointer[_IO_FILE],
    argument1 : Int,
    argument2 : CLong) CLong;

external _IO_sgetn(
    argument0 : Pointer[_IO_FILE],
    argument1 : RawPointer,
    argument2 : CULong) CULong;

external _IO_seekoff(
    argument0 : Pointer[_IO_FILE],
    argument1 : CLong,
    argument2 : Int,
    argument3 : Int) CLong;

external _IO_seekpos(
    argument0 : Pointer[_IO_FILE],
    argument1 : CLong,
    argument2 : Int) CLong;

external _IO_free_backup_area(
    argument0 : Pointer[_IO_FILE]);

alias fpos_t = _G_fpos_t;

external stdin : Pointer[Struct__IO_FILE];

external stdout : Pointer[Struct__IO_FILE];

external stderr : Pointer[Struct__IO_FILE];

external remove(
    __filename : Pointer[CChar]) Int;

external rename(
    __old : Pointer[CChar],
    __new : Pointer[CChar]) Int;

external tmpfile() Pointer[FILE];

external tmpnam(
    __s : Pointer[CChar]) Pointer[CChar];

external fclose(
    __stream : Pointer[FILE]) Int;

external fflush(
    __stream : Pointer[FILE]) Int;

external fopen(
    __filename : Pointer[CChar],
    __modes : Pointer[CChar]) Pointer[FILE];

external freopen(
    __filename : Pointer[CChar],
    __modes : Pointer[CChar],
    __stream : Pointer[FILE]) Pointer[FILE];

external setbuf(
    __stream : Pointer[FILE],
    __buf : Pointer[CChar]);

external setvbuf(
    __stream : Pointer[FILE],
    __buf : Pointer[CChar],
    __modes : Int,
    __n : CULong) Int;

external fprintf(
    __stream : Pointer[FILE],
    __format : Pointer[CChar],
    ...) Int;

external printf(
    __format : Pointer[CChar],
    ...) Int;

external sprintf(
    __s : Pointer[CChar],
    __format : Pointer[CChar],
    ...) Int;

external vfprintf(
    __s : Pointer[FILE],
    __format : Pointer[CChar],
    __arg : Pointer[__va_list_tag]) Int;

external vprintf(
    __format : Pointer[CChar],
    __arg : Pointer[__va_list_tag]) Int;

external vsprintf(
    __s : Pointer[CChar],
    __format : Pointer[CChar],
    __arg : Pointer[__va_list_tag]) Int;

external snprintf(
    __s : Pointer[CChar],
    __maxlen : CULong,
    __format : Pointer[CChar],
    ...) Int;

external vsnprintf(
    __s : Pointer[CChar],
    __maxlen : CULong,
    __format : Pointer[CChar],
    __arg : Pointer[__va_list_tag]) Int;

external fscanf(
    __stream : Pointer[FILE],
    __format : Pointer[CChar],
    ...) Int;

external scanf(
    __format : Pointer[CChar],
    ...) Int;

external sscanf(
    __s : Pointer[CChar],
    __format : Pointer[CChar],
    ...) Int;

external vfscanf(
    __s : Pointer[FILE],
    __format : Pointer[CChar],
    __arg : Pointer[__va_list_tag]) Int;

external vscanf(
    __format : Pointer[CChar],
    __arg : Pointer[__va_list_tag]) Int;

external vsscanf(
    __s : Pointer[CChar],
    __format : Pointer[CChar],
    __arg : Pointer[__va_list_tag]) Int;

external fgetc(
    __stream : Pointer[FILE]) Int;

external getc(
    __stream : Pointer[FILE]) Int;

external getchar() Int;

external fputc(
    __c : Int,
    __stream : Pointer[FILE]) Int;

external putc(
    __c : Int,
    __stream : Pointer[FILE]) Int;

external putchar(
    __c : Int) Int;

external fgets(
    __s : Pointer[CChar],
    __n : Int,
    __stream : Pointer[FILE]) Pointer[CChar];

external gets(
    __s : Pointer[CChar]) Pointer[CChar];

external fputs(
    __s : Pointer[CChar],
    __stream : Pointer[FILE]) Int;

external puts(
    __s : Pointer[CChar]) Int;

external ungetc(
    __c : Int,
    __stream : Pointer[FILE]) Int;

external fread(
    __ptr : RawPointer,
    __size : CULong,
    __n : CULong,
    __stream : Pointer[FILE]) CULong;

external fwrite(
    __ptr : RawPointer,
    __size : CULong,
    __n : CULong,
    __s : Pointer[FILE]) CULong;

external fseek(
    __stream : Pointer[FILE],
    __off : CLong,
    __whence : Int) Int;

external ftell(
    __stream : Pointer[FILE]) CLong;

external rewind(
    __stream : Pointer[FILE]);

external fgetpos(
    __stream : Pointer[FILE],
    __pos : Pointer[fpos_t]) Int;

external fsetpos(
    __stream : Pointer[FILE],
    __pos : Pointer[fpos_t]) Int;

external clearerr(
    __stream : Pointer[FILE]);

external feof(
    __stream : Pointer[FILE]) Int;

external ferror(
    __stream : Pointer[FILE]) Int;

external perror(
    __s : Pointer[CChar]);

alias Oid = UInt;

alias CONNECTION_OK = 0;
alias CONNECTION_BAD = 1;
alias CONNECTION_STARTED = 2;
alias CONNECTION_MADE = 3;
alias CONNECTION_AWAITING_RESPONSE = 4;
alias CONNECTION_AUTH_OK = 5;
alias CONNECTION_SETENV = 6;
alias CONNECTION_SSL_STARTUP = 7;
alias CONNECTION_NEEDED = 8;

alias ConnStatusType = Int;

alias PGRES_POLLING_FAILED = 0;
alias PGRES_POLLING_READING = 1;
alias PGRES_POLLING_WRITING = 2;
alias PGRES_POLLING_OK = 3;
alias PGRES_POLLING_ACTIVE = 4;

alias PostgresPollingStatusType = Int;

alias PGRES_EMPTY_QUERY = 0;
alias PGRES_COMMAND_OK = 1;
alias PGRES_TUPLES_OK = 2;
alias PGRES_COPY_OUT = 3;
alias PGRES_COPY_IN = 4;
alias PGRES_BAD_RESPONSE = 5;
alias PGRES_NONFATAL_ERROR = 6;
alias PGRES_FATAL_ERROR = 7;

alias ExecStatusType = Int;

alias PQTRANS_IDLE = 0;
alias PQTRANS_ACTIVE = 1;
alias PQTRANS_INTRANS = 2;
alias PQTRANS_INERROR = 3;
alias PQTRANS_UNKNOWN = 4;

alias PGTransactionStatusType = Int;

alias PQERRORS_TERSE = 0;
alias PQERRORS_DEFAULT = 1;
alias PQERRORS_VERBOSE = 2;

alias PGVerbosity = Int;

alias PGconn = Opaque;

alias PGresult = Opaque;

alias PGcancel = Opaque;

record Struct_pgNotify (
    relname : Pointer[CChar],
    be_pid : Int,
    extra : Pointer[CChar],
    next : Pointer[Struct_pgNotify],
);

alias PGnotify = Struct_pgNotify;

alias PQnoticeReceiver = CCodePointer[(RawPointer,OpaquePointer),()];

alias PQnoticeProcessor = CCodePointer[(RawPointer,Pointer[CChar]),()];

alias pqbool = CChar;

record Struct__PQprintOpt (
    header : CChar,
    align : CChar,
    standard : CChar,
    html3 : CChar,
    expanded : CChar,
    pager : CChar,
    fieldSep : Pointer[CChar],
    tableOpt : Pointer[CChar],
    caption : Pointer[CChar],
    fieldName : Pointer[Pointer[CChar]],
);

alias PQprintOpt = Struct__PQprintOpt;

record Struct__PQconninfoOption (
    keyword : Pointer[CChar],
    envvar : Pointer[CChar],
    compiled : Pointer[CChar],
    val : Pointer[CChar],
    label : Pointer[CChar],
    dispchar : Pointer[CChar],
    dispsize : Int,
);

alias PQconninfoOption = Struct__PQconninfoOption;

record UnnamedStruct5 (
    len : Int,
    isint : Int,
    u : AUnionType,
);

alias PQArgBlock = UnnamedStruct5;

record Struct_pgresAttDesc (
    name : Pointer[CChar],
    tableid : UInt,
    columnid : Int,
    format : Int,
    typid : UInt,
    typlen : Int,
    atttypmod : Int,
);

alias PGresAttDesc = Struct_pgresAttDesc;

external PQconnectStart(
    conninfo : Pointer[CChar]) Pointer[PGconn];

external PQconnectStartParams(
    keywords : Pointer[Pointer[CChar]],
    values : Pointer[Pointer[CChar]],
    expand_dbname : Int) Pointer[PGconn];

external PQconnectPoll(
    conn : Pointer[PGconn]) PostgresPollingStatusType;

external PQconnectdb(
    conninfo : Pointer[CChar]) Pointer[PGconn];

external PQconnectdbParams(
    keywords : Pointer[Pointer[CChar]],
    values : Pointer[Pointer[CChar]],
    expand_dbname : Int) Pointer[PGconn];

external PQsetdbLogin(
    pghost : Pointer[CChar],
    pgport : Pointer[CChar],
    pgoptions : Pointer[CChar],
    pgtty : Pointer[CChar],
    dbName : Pointer[CChar],
    login : Pointer[CChar],
    pwd : Pointer[CChar]) Pointer[PGconn];

external PQfinish(
    conn : Pointer[PGconn]);

external PQconndefaults() Pointer[PQconninfoOption];

external PQconninfoParse(
    conninfo : Pointer[CChar],
    errmsg : Pointer[Pointer[CChar]]) Pointer[PQconninfoOption];

external PQconninfoFree(
    connOptions : Pointer[PQconninfoOption]);

external PQresetStart(
    conn : Pointer[PGconn]) Int;

external PQresetPoll(
    conn : Pointer[PGconn]) PostgresPollingStatusType;

external PQreset(
    conn : Pointer[PGconn]);

external PQgetCancel(
    conn : Pointer[PGconn]) Pointer[PGcancel];

external PQfreeCancel(
    cancel : Pointer[PGcancel]);

external PQcancel(
    cancel : Pointer[PGcancel],
    errbuf : Pointer[CChar],
    errbufsize : Int) Int;

external PQrequestCancel(
    conn : Pointer[PGconn]) Int;

external PQdb(
    conn : Pointer[PGconn]) Pointer[CChar];

external PQuser(
    conn : Pointer[PGconn]) Pointer[CChar];

external PQpass(
    conn : Pointer[PGconn]) Pointer[CChar];

external PQhost(
    conn : Pointer[PGconn]) Pointer[CChar];

external PQport(
    conn : Pointer[PGconn]) Pointer[CChar];

external PQtty(
    conn : Pointer[PGconn]) Pointer[CChar];

external PQoptions(
    conn : Pointer[PGconn]) Pointer[CChar];

external PQstatus(
    conn : Pointer[PGconn]) ConnStatusType;

external PQtransactionStatus(
    conn : Pointer[PGconn]) PGTransactionStatusType;

external PQparameterStatus(
    conn : Pointer[PGconn],
    paramName : Pointer[CChar]) Pointer[CChar];

external PQprotocolVersion(
    conn : Pointer[PGconn]) Int;

external PQserverVersion(
    conn : Pointer[PGconn]) Int;

external PQerrorMessage(
    conn : Pointer[PGconn]) Pointer[CChar];

external PQsocket(
    conn : Pointer[PGconn]) Int;

external PQbackendPID(
    conn : Pointer[PGconn]) Int;

external PQconnectionNeedsPassword(
    conn : Pointer[PGconn]) Int;

external PQconnectionUsedPassword(
    conn : Pointer[PGconn]) Int;

external PQclientEncoding(
    conn : Pointer[PGconn]) Int;

external PQsetClientEncoding(
    conn : Pointer[PGconn],
    encoding : Pointer[CChar]) Int;

external PQgetssl(
    conn : Pointer[PGconn]) RawPointer;

external PQinitSSL(
    do_init : Int);

external PQinitOpenSSL(
    do_ssl : Int,
    do_crypto : Int);

external PQsetErrorVerbosity(
    conn : Pointer[PGconn],
    verbosity : PGVerbosity) PGVerbosity;

external PQtrace(
    conn : Pointer[PGconn],
    debug_port : Pointer[FILE]);

external PQuntrace(
    conn : Pointer[PGconn]);

external PQsetNoticeReceiver(
    conn : Pointer[PGconn],
    proc : PQnoticeReceiver,
    arg : RawPointer) PQnoticeReceiver;

external PQsetNoticeProcessor(
    conn : Pointer[PGconn],
    proc : PQnoticeProcessor,
    arg : RawPointer) PQnoticeProcessor;

alias pgthreadlock_t = CCodePointer[(Int),()];

external PQregisterThreadLock(
    newhandler : pgthreadlock_t) pgthreadlock_t;

external PQexec(
    conn : Pointer[PGconn],
    query : Pointer[CChar]) Pointer[PGresult];

external PQexecParams(
    conn : Pointer[PGconn],
    command : Pointer[CChar],
    nParams : Int,
    paramTypes : Pointer[UInt],
    paramValues : Pointer[Pointer[CChar]],
    paramLengths : Pointer[Int],
    paramFormats : Pointer[Int],
    resultFormat : Int) Pointer[PGresult];

external PQprepare(
    conn : Pointer[PGconn],
    stmtName : Pointer[CChar],
    query : Pointer[CChar],
    nParams : Int,
    paramTypes : Pointer[UInt]) Pointer[PGresult];

external PQexecPrepared(
    conn : Pointer[PGconn],
    stmtName : Pointer[CChar],
    nParams : Int,
    paramValues : Pointer[Pointer[CChar]],
    paramLengths : Pointer[Int],
    paramFormats : Pointer[Int],
    resultFormat : Int) Pointer[PGresult];

external PQsendQuery(
    conn : Pointer[PGconn],
    query : Pointer[CChar]) Int;

external PQsendQueryParams(
    conn : Pointer[PGconn],
    command : Pointer[CChar],
    nParams : Int,
    paramTypes : Pointer[UInt],
    paramValues : Pointer[Pointer[CChar]],
    paramLengths : Pointer[Int],
    paramFormats : Pointer[Int],
    resultFormat : Int) Int;

external PQsendPrepare(
    conn : Pointer[PGconn],
    stmtName : Pointer[CChar],
    query : Pointer[CChar],
    nParams : Int,
    paramTypes : Pointer[UInt]) Int;

external PQsendQueryPrepared(
    conn : Pointer[PGconn],
    stmtName : Pointer[CChar],
    nParams : Int,
    paramValues : Pointer[Pointer[CChar]],
    paramLengths : Pointer[Int],
    paramFormats : Pointer[Int],
    resultFormat : Int) Int;

external PQgetResult(
    conn : Pointer[PGconn]) Pointer[PGresult];

external PQisBusy(
    conn : Pointer[PGconn]) Int;

external PQconsumeInput(
    conn : Pointer[PGconn]) Int;

external PQnotifies(
    conn : Pointer[PGconn]) Pointer[PGnotify];

external PQputCopyData(
    conn : Pointer[PGconn],
    buffer : Pointer[CChar],
    nbytes : Int) Int;

external PQputCopyEnd(
    conn : Pointer[PGconn],
    errormsg : Pointer[CChar]) Int;

external PQgetCopyData(
    conn : Pointer[PGconn],
    buffer : Pointer[Pointer[CChar]],
    async : Int) Int;

external PQgetline(
    conn : Pointer[PGconn],
    string : Pointer[CChar],
    length : Int) Int;

external PQputline(
    conn : Pointer[PGconn],
    string : Pointer[CChar]) Int;

external PQgetlineAsync(
    conn : Pointer[PGconn],
    buffer : Pointer[CChar],
    bufsize : Int) Int;

external PQputnbytes(
    conn : Pointer[PGconn],
    buffer : Pointer[CChar],
    nbytes : Int) Int;

external PQendcopy(
    conn : Pointer[PGconn]) Int;

external PQsetnonblocking(
    conn : Pointer[PGconn],
    arg : Int) Int;

external PQisnonblocking(
    conn : Pointer[PGconn]) Int;

external PQisthreadsafe() Int;

external PQflush(
    conn : Pointer[PGconn]) Int;

external PQfn(
    conn : Pointer[PGconn],
    fnid : Int,
    result_buf : Pointer[Int],
    result_len : Pointer[Int],
    result_is_int : Int,
    args : Pointer[PQArgBlock],
    nargs : Int) Pointer[PGresult];

external PQresultStatus(
    res : Pointer[PGresult]) ExecStatusType;

external PQresStatus(
    status : ExecStatusType) Pointer[CChar];

external PQresultErrorMessage(
    res : Pointer[PGresult]) Pointer[CChar];

external PQresultErrorField(
    res : Pointer[PGresult],
    fieldcode : Int) Pointer[CChar];

external PQntuples(
    res : Pointer[PGresult]) Int;

external PQnfields(
    res : Pointer[PGresult]) Int;

external PQbinaryTuples(
    res : Pointer[PGresult]) Int;

external PQfname(
    res : Pointer[PGresult],
    field_num : Int) Pointer[CChar];

external PQfnumber(
    res : Pointer[PGresult],
    field_name : Pointer[CChar]) Int;

external PQftable(
    res : Pointer[PGresult],
    field_num : Int) UInt;

external PQftablecol(
    res : Pointer[PGresult],
    field_num : Int) Int;

external PQfformat(
    res : Pointer[PGresult],
    field_num : Int) Int;

external PQftype(
    res : Pointer[PGresult],
    field_num : Int) UInt;

external PQfsize(
    res : Pointer[PGresult],
    field_num : Int) Int;

external PQfmod(
    res : Pointer[PGresult],
    field_num : Int) Int;

external PQcmdStatus(
    res : Pointer[PGresult]) Pointer[CChar];

external PQoidStatus(
    res : Pointer[PGresult]) Pointer[CChar];

external PQoidValue(
    res : Pointer[PGresult]) UInt;

external PQcmdTuples(
    res : Pointer[PGresult]) Pointer[CChar];

external PQgetvalue(
    res : Pointer[PGresult],
    tup_num : Int,
    field_num : Int) Pointer[CChar];

external PQgetlength(
    res : Pointer[PGresult],
    tup_num : Int,
    field_num : Int) Int;

external PQgetisnull(
    res : Pointer[PGresult],
    tup_num : Int,
    field_num : Int) Int;

external PQnparams(
    res : Pointer[PGresult]) Int;

external PQparamtype(
    res : Pointer[PGresult],
    param_num : Int) UInt;

external PQdescribePrepared(
    conn : Pointer[PGconn],
    stmt : Pointer[CChar]) Pointer[PGresult];

external PQdescribePortal(
    conn : Pointer[PGconn],
    portal : Pointer[CChar]) Pointer[PGresult];

external PQsendDescribePrepared(
    conn : Pointer[PGconn],
    stmt : Pointer[CChar]) Int;

external PQsendDescribePortal(
    conn : Pointer[PGconn],
    portal : Pointer[CChar]) Int;

external PQclear(
    res : Pointer[PGresult]);

external PQfreemem(
    ptr : RawPointer);

external PQmakeEmptyPGresult(
    conn : Pointer[PGconn],
    status : ExecStatusType) Pointer[PGresult];

external PQcopyResult(
    src : Pointer[PGresult],
    flags : Int) Pointer[PGresult];

external PQsetResultAttrs(
    res : Pointer[PGresult],
    numAttributes : Int,
    attDescs : Pointer[PGresAttDesc]) Int;

external PQresultAlloc(
    res : Pointer[PGresult],
    nBytes : CULong) RawPointer;

external PQsetvalue(
    res : Pointer[PGresult],
    tup_num : Int,
    field_num : Int,
    value : Pointer[CChar],
    len : Int) Int;

external PQescapeStringConn(
    conn : Pointer[PGconn],
    to : Pointer[CChar],
    from : Pointer[CChar],
    length : CULong,
    error : Pointer[Int]) CULong;

external PQescapeLiteral(
    conn : Pointer[PGconn],
    str : Pointer[CChar],
    len : CULong) Pointer[CChar];

external PQescapeIdentifier(
    conn : Pointer[PGconn],
    str : Pointer[CChar],
    len : CULong) Pointer[CChar];

external PQescapeByteaConn(
    conn : Pointer[PGconn],
    from : Pointer[CUChar],
    from_length : CULong,
    to_length : Pointer[CULong]) Pointer[CUChar];

external PQunescapeBytea(
    strtext : Pointer[CUChar],
    retbuflen : Pointer[CULong]) Pointer[CUChar];

external PQescapeString(
    to : Pointer[CChar],
    from : Pointer[CChar],
    length : CULong) CULong;

external PQescapeBytea(
    from : Pointer[CUChar],
    from_length : CULong,
    to_length : Pointer[CULong]) Pointer[CUChar];

external PQprint(
    fout : Pointer[FILE],
    res : Pointer[PGresult],
    ps : Pointer[PQprintOpt]);

external PQdisplayTuples(
    res : Pointer[PGresult],
    fp : Pointer[FILE],
    fillAlign : Int,
    fieldSep : Pointer[CChar],
    printHeader : Int,
    quiet : Int);

external PQprintTuples(
    res : Pointer[PGresult],
    fout : Pointer[FILE],
    printAttName : Int,
    terseOutput : Int,
    width : Int);

external lo_open(
    conn : Pointer[PGconn],
    lobjId : UInt,
    mode : Int) Int;

external lo_close(
    conn : Pointer[PGconn],
    fd : Int) Int;

external lo_read(
    conn : Pointer[PGconn],
    fd : Int,
    buf : Pointer[CChar],
    len : CULong) Int;

external lo_write(
    conn : Pointer[PGconn],
    fd : Int,
    buf : Pointer[CChar],
    len : CULong) Int;

external lo_lseek(
    conn : Pointer[PGconn],
    fd : Int,
    offset : Int,
    whence : Int) Int;

external lo_creat(
    conn : Pointer[PGconn],
    mode : Int) UInt;

external lo_create(
    conn : Pointer[PGconn],
    lobjId : UInt) UInt;

external lo_tell(
    conn : Pointer[PGconn],
    fd : Int) Int;

external lo_truncate(
    conn : Pointer[PGconn],
    fd : Int,
    len : CULong) Int;

external lo_unlink(
    conn : Pointer[PGconn],
    lobjId : UInt) Int;

external lo_import(
    conn : Pointer[PGconn],
    filename : Pointer[CChar]) UInt;

external lo_import_with_oid(
    conn : Pointer[PGconn],
    filename : Pointer[CChar],
    lobjId : UInt) UInt;

external lo_export(
    conn : Pointer[PGconn],
    lobjId : UInt,
    filename : Pointer[CChar]) Int;

external PQmblen(
    s : Pointer[CChar],
    encoding : Int) Int;

external PQdsplen(
    s : Pointer[CChar],
    encoding : Int) Int;

external PQenv2encoding() Int;

external PQencryptPassword(
    passwd : Pointer[CChar],
    user : Pointer[CChar]) Pointer[CChar];

external pg_char_to_encoding(
    name : Pointer[CChar]) Int;

external pg_encoding_to_char(
    encoding : Int) Pointer[CChar];

external pg_valid_server_encoding_id(
    encoding : Int) Int;
